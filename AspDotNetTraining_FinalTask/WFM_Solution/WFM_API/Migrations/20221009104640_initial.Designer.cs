// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WFM_API.Wfm_Data;

#nullable disable

namespace WFM_API.Migrations
{
    [DbContext(typeof(EmployeeDataContext))]
    [Migration("20221009104640_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("LockStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("lockstatus");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("profile_Id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("Wfm_Manager")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("wfm_manager");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Email = "bkt123@gmail.com",
                            Experience = 2,
                            LockStatus = "Not_Requested",
                            Manager = "Rajarajan",
                            Name = "Balkrishna Tripathi",
                            ProfileId = 1,
                            Status = "Active",
                            Wfm_Manager = "Sabitha Balakrishnan"
                        },
                        new
                        {
                            EmployeeID = 2,
                            Email = "rahulm@gmail.com",
                            Experience = 2,
                            LockStatus = "Not_Requested",
                            Manager = "Dheeraj Raj",
                            Name = "Rahul Mongia",
                            ProfileId = 1,
                            Status = "Active",
                            Wfm_Manager = "Sabithabalakrishnan"
                        },
                        new
                        {
                            EmployeeID = 3,
                            Email = "raju@gmail.com",
                            Experience = 2,
                            LockStatus = "Requested",
                            Manager = "Krishna Tripathi",
                            Name = "Raju Rastogi",
                            ProfileId = 1,
                            Status = "Active",
                            Wfm_Manager = "Raghuraj"
                        });
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("skillId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Python"
                        },
                        new
                        {
                            Id = 3,
                            Name = "React JS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mongo DB"
                        });
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.SkillMap", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_Id");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skillId");

                    b.HasKey("EmployeeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillMaps");
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.SoftLock", b =>
                {
                    b.Property<int>("LockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lockId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LockId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_Id");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastupdated");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("manager");

                    b.Property<string>("ManagerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("managerstatus");

                    b.Property<string>("MgrLastupdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mgrlastupdate");

                    b.Property<string>("MgrStatuscomment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mgrstatuscomment");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("reqdate");

                    b.Property<string>("RequestMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requestmessage");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("Wfmremark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("wfmremark");

                    b.HasKey("LockId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SoftLocks");
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.SkillMap", b =>
                {
                    b.HasOne("WFM_API.Wfm_DomainModel.Employee", "Employees")
                        .WithMany("SkillMaps")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WFM_API.Wfm_DomainModel.Skill", "Skills")
                        .WithMany("SkillMaps")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.SoftLock", b =>
                {
                    b.HasOne("WFM_API.Wfm_DomainModel.Employee", "Employees")
                        .WithMany("SoftLocks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.Employee", b =>
                {
                    b.Navigation("SkillMaps");

                    b.Navigation("SoftLocks");
                });

            modelBuilder.Entity("WFM_API.Wfm_DomainModel.Skill", b =>
                {
                    b.Navigation("SkillMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
